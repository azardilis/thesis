\documentclass[phd]{infthesis}

\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage[british]{babel}
\usepackage{microtype}
\usepackage[usenames,dvipsnames,svgnames,table]{xcolor}
\usepackage[english=british,autopunct=false]{csquotes}
\usepackage[natbib=true,style=authoryear-comp,maxbibnames=6]{biblatex}
\usepackage{graphicx}
\usepackage{textcomp}
\usepackage{wrapfig}
\usepackage{xfrac}
\usepackage{xspace}
\usepackage{mathcommon}
\usepackage[sc]{mathpazo}
\usepackage{hyperref}
\usepackage{expl3}
\usepackage{enumitem}

\frenchspacing

% Bibliography
\addbibresource{thesis.bib}

% Text
\newcommand{\ie}{i.e.\xspace}
\newcommand{\eg}{e.g.\xspace}

% Referencing
\newcommand{\chp}[1]{\S\ref{chp:#1}}
\newcommand{\sct}[1]{\S\ref{sec:#1}}
\newcommand{\subsct}[1]{\S\ref{subsec:#1}}
\newcommand{\eqn}[1]{Eq.~\ref{eq:#1}}
\newcommand{\eqns}[2]{Eq. \ref{eq:#1} and \ref{eq:#2}}
\newcommand{\lem}[1]{Lemma~\ref{lemma:#1}}
\newcommand{\lems}[2]{Lemmas \ref{lemma:#1} and \ref{lemma:#2}}
\newcommand{\thm}[1]{Th.~\ref{thm:#1}}
\newcommand{\fig}[1]{Fig.~\ref{fig:#1}}
\newcommand{\diagram}[1]{diagram~\ref{eq:#1}}
\newcommand{\app}[1]{Appendix~\ref{app:#1}}
\newcommand{\mcite}[1]{\textcolor{gray}{#1}} % missing cite
\newcommand{\defn}[1]{Def.~\ref{def:#1}}
\newcommand{\prop}[1]{Prop.~\ref{prop:#1}}

% Math
\renewcommand{\tuple}[1]{\left(#1\right)}
\DeclareMathOperator*{\expn}{exp}
\renewcommand*{\exp}[1]{e^{\,#1}} % \mathrm{e}^{#1}}
\renewcommand{\qedsymbol}{\ensuremath{\blacksquare}}
\newcommand{\partialto}{\rightharpoonup}
\newcommand{\id}{\vec{1}} % identity function

% Other stuff
\newcommand{\maybe}[1]{\textcolor{gray}{#1}}
\newcommand{\todo}[1]{\textcolor{red}{TODO: #1}}

% Abstract
\begin{document}

\chapter{Related Work}
\label{chp:oc}

Formal models of physical systems serve two roles (i) documentation and
communication of our understanding (ii) formal analysis like simulation. The
most common language for describing the natural world is dynamical systems
theory. It has a long tradition in Physics starting from Newton, Poincare
etc. It relies on a conceptual abstraction where instead of describing the
objects that form the physical world, it describes quantifiable properties of
such objects. For example, when explaining the movement of planets one does not
talk about the moon but rather about the position of the moon. Then the
evolution of the system in time (or space) is described by (partial)
differential (or difference) equations that state the change in the numerical
values of the quantifiable properties that form the system as they interact with
each other. For example, one
might write the equation of position of a particle or a molecule diffusing in a
medium. This abstraction of avoiding dealing with the objects directly but
rather with some numerical variables representing their properties has been at
the core of the success of dynamical systems theory. A big ensemble of methods
have been developed for the analysis of such systems, which one gets for free if
they choose to describe a physical system of interest in these terms.

Dynamical systems languages have not been as successful in scenarios where the
structure of the  described system is not static. While one might be able to
find a quantifiable property of the system to describe, in cases where the
question posed is about the changing structure itself or about how it gives rise
to other dynamics, such an abstraction is not adequate. Consider for example
plant development and its effect on carbon intake for the entire
plant. While in some cases writing an equation for the size of the plant is
enough, a truly mechanistic understanding requires treating the developing structure that
gives rise to plant size explicitly. How would one write equations though for the size
of the leaves, for example, if new ones keep appearing?
In those case one might be better off with a language that allows the
description of the objects themselves, their interactions, and
organisation. Unsurprisingly such languages have been developed for
scientific fields that deal with parts of the natural world where structures are
dynamic and self-organising. A whole strand of work on languages of
increasing complexity exist for the description of biochemical systems starting
from simple molecular reactions. The field of plant development also has seen an
independent strand of work on languages with explicit description of objects.
Both these fields 
In developing these languages there was a lot of interaction with formalisms
from Computer Science, a field where there are theoretical formalisms

Here we are interested in multi-scale plant models that try
to recreate a digital organism starting from genomes and molecular
mechanisms. We therefore have to explicitly represent systems at different
levels

+ properties
There are some attempts to include characteristics of other category.

Our language is situated in this space.

Concretely, in this chapter we will do the following:

\begin{itemize}
\item
\item
\end{itemize}




\section{Overview -- discrete objects}


\section{Overview -- dynamics going to structure}


\section{Comparison through examples}








\singlespace

%% Specify the bibliography file. Default is thesis.bib.
\bibliography{relWork}

\printbibliography[heading=bibintoc]

%% ... that's all, folks!
\end{document}

%%% Local Variables:
%%% mode: latex
%%% TeX-master: t
%%% End:
